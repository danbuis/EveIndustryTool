@page "/itemlist"
@using EveIndustryTool.Data
@using System

<PageTitle>Counter</PageTitle>
<table>
    <thead>
        <td>Item</td>
        <td>Ingredient</td>
        <td>Quantity</td>
    </thead>
    @foreach (BlueprintLine line in parts)
    {
        <tr>
            <td>@MapIntToItemName(line.typeID)</td>
            <td>@MapIntToItemName(line.materialTypeID)</td>
            <td>@line.quantity</td>
        </tr>
    }
</table>

@code {
    Dictionary<int, Item> items = new Dictionary<int, Item>();
    List<BlueprintLine> parts = new List<BlueprintLine>();

    protected override async Task OnInitializedAsync(){
        using (var reader = new StreamReader("Data/ItemData.csv"))
            while(!reader.EndOfStream){
                string line = reader.ReadLine();

                List<string> fields = line.Split(",").ToList();
                //Console.Write(line);
                Item item = new Item(
                    Int32.Parse(fields[0]),
                    Int32.Parse(fields[1]),
                    fields[2],
                    fields[3],
                    fields[4],
                    Int32.Parse(fields[5]),
                    0
                );
                items.Add(item.typeID, item);
            }
        using (var reader = new StreamReader("Data/Blueprints.csv"))
            while (!reader.EndOfStream)
            {
                String line = reader.ReadLine();

                List<string> fields = line.Split(",").ToList();
                //Console.WriteLine(line);
                BlueprintLine bpLine = new BlueprintLine(
                    Int32.Parse(fields[0]),
                    Int32.Parse(fields[1]),
                    Int32.Parse(fields[2]),
                    Int32.Parse(fields[3])
                );
                if (bpLine.activityID == 1) {
                    parts.Add(bpLine);
                }
            }
    }

    private string MapIntToItemName(int inputID){
        //Console.WriteLine("checking " + inputID);
        if (items.ContainsKey(inputID)){
            return items[inputID].name;
        }
        else
        {
            return "Not Found : " + inputID;
        }
    }
}
